@model PaginatedList<DCOClearinghouse.Models.Resource>

@*@{
    int rowNumber = (int)ViewData["startIndex"];
}*@

@functions
{
    string GetHostDomain(string urlString)
    {
        if (urlString == null)
            return null;
        try
        {
            Uri uri = new Uri(urlString);

            if (uri == null)
                return null;
                
            var host = uri.Host;

            if (host.Split(".").Length>2)
            {
                var index = host.IndexOf(".");
                return "(" + host.Substring(index + 1) + ")";
            }
            return "("+uri?.Authority+")";
        }
        catch (UriFormatException)
        {
            return null;
        }
    }

    string GetAgo(DateTime? resourceDateTime)
    {
        if (resourceDateTime == null)
            return "";

        var diff = DateTime.UtcNow.Subtract(resourceDateTime.Value);

        string result;

        if (diff.Days > 0)
        {
            result = diff.Days == 1 ? $"1 day" : $"{diff.Days} days";
        }
        else if (diff.Hours > 0)
        {
            result = $"{diff.Hours} hours";
        }
        else
        {
            result = $"{diff.Minutes} minutes";
        }

        return result+" ago";
    }
}

<div id="table-container">
<table class="table table-striped">
    <thead>
    <tr>
        @*<th>

        </th>*@
        <th>
            
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var resource in Model)
    {
        <tr>
            @*<td>
                @{ rowNumber++;} <span>@rowNumber.</span>
            </td>*@
            <td>
                @if (resource.Link == null)
                {
                    @Html.ActionLink(resource.Subject, "Details", "Resources", new {ID = resource.ID})
                }
                else
                {
                    <a href="@resource.Link">@Html.DisplayFor(_ => resource.Subject)</a>
                    <span class="small">@GetHostDomain(resource.Link)</span>
                }
                <br/>
                <div class="small">
                    @GetAgo(resource.CreateDate ?? null) | 
                    @Html.ActionLink("Details", "Details", "Resources", new {@ID = resource.ID}) | 
                    @Html.ActionLink("Report", "ReportBadLink", "Resources", new {@ID = resource.ID})
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="@ViewContext.RouteData.Values["Action"]"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex-1)"
   asp-route-searchTypeId="@ViewData["CurrentSearchType"]"
   asp-route-searchStatus="@ViewData["CurrentStatus"]"
   class="btn btn-default @prevDisabled"
>
    Preivous
</a>

<a asp-action="@ViewContext.RouteData.Values["Action"]"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex+1)"
   asp-route-searchTypeId="@ViewData["CurrentSearchType"]"
   asp-route-searchStatus="@ViewData["CurrentStatus"]"
   class="btn btn-default @nextDisabled"
>
    Next
</a>