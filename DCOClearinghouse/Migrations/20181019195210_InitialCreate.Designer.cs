// <auto-generated />
using System;
using DCOClearinghouse.Data;
using DCOClearinghouse.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DCOClearinghouse.Migrations
{
    [DbContext(typeof(ResourceContext))]
    [Migration("20181019195210_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DCOClearinghouse.Models.Resource", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BadlinkVotes");

                    b.Property<int?>("CategoryID");

                    b.Property<string>("Contact");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<string>("Link");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int?>("TypeID");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("TypeID");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.ResourceCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<int>("Depth");

                    b.Property<int?>("ParentCategoryID");

                    b.HasKey("ID");

                    b.HasIndex("ParentCategoryID");

                    b.ToTable("ResourceCategory");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.ResourceTag", b =>
                {
                    b.Property<int>("ResourceID");

                    b.Property<int>("TagID");

                    b.HasKey("ResourceID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("ResourceTag");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.ResourceType", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TypeName");

                    b.HasKey("ID");

                    b.ToTable("ResourceType");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.Resource", b =>
                {
                    b.HasOne("DCOClearinghouse.Models.ResourceCategory", "Category")
                        .WithMany("Resources")
                        .HasForeignKey("CategoryID");

                    b.HasOne("DCOClearinghouse.Models.ResourceType", "Type")
                        .WithMany("Resources")
                        .HasForeignKey("TypeID");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.ResourceCategory", b =>
                {
                    b.HasOne("DCOClearinghouse.Models.ResourceCategory", "ParentCategory")
                        .WithMany("ChildrenCategories")
                        .HasForeignKey("ParentCategoryID");
                });

            modelBuilder.Entity("DCOClearinghouse.Models.ResourceTag", b =>
                {
                    b.HasOne("DCOClearinghouse.Models.Resource", "Resource")
                        .WithMany("ResourceTags")
                        .HasForeignKey("ResourceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DCOClearinghouse.Models.Tag", "Tag")
                        .WithMany("ResourceTags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
